name: "Tests xdist"
on:
  push:
    branches:
      - master
    paths-ignore:
      - CHANGELOG.md
      - README.md
      - LICENSE
      - LICENSE.txt
      - release-process.rst
      - .gitignore
      - .coveragerc
      - .github/workflows/deploy.yml
      - .github/workflows/codeql-analysis.yml
      - .github/workflows/FUNDING.yml
      - setup.cfg
      - setup.py
      - webdriver_manager/__init__.py

  pull_request:
    branches:
      - master
    paths-ignore:
      - CHANGELOG.md
      - README.md
      - LICENSE
      - LICENSE.txt
      - release-process.rst
      - .gitignore
      - .coveragerc
      - .github/workflows/deploy.yml
      - .github/workflows/codeql-analysis.yml
      - .github/workflows/FUNDING.yml
      - setup.cfg
      - setup.py
      - webdriver_manager/__init__.py

jobs:
  test-xdist:
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        selenium-version: ['4.1.0']
        os: [ ubuntu-latest ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install browsers on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install software-properties-common apt-transport-https wget curl

          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          google-chrome --version

      - name: Install Python dependencies
        run: |
          python -m pip install -U pip wheel
          pip install pipenv
          pipenv install --dev --skip-lock --python=${{ matrix.python-version }}
          pipenv install selenium==${{ matrix.selenium-version }}

      - name: Run tests on Linux (with xvfb)
        if: runner.os == 'Linux'
        uses: coactions/setup-xvfb@v1
        env:
          WDM_LOG: ${{ matrix.wdm-log }}
        with:
          run: |
            pipenv run pytest -sv tests_xdist/ -n 2

      - name: List folders
        run: ls -la ~/.wdm